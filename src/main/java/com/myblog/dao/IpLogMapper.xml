<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.dao.IpLogMapper">
    <resultMap id="BaseResultMap" type="com.myblog.model.IpLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="ip_time" jdbcType="TIMESTAMP" property="ipTime"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="uri" jdbcType="VARCHAR" property="uri"/>
        <result column="response_time" jdbcType="BIGINT" property="responseTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, ip, ip_time, area, uri, response_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ip_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ip_log
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.myblog.model.IpLog">
    insert into ip_log (id, ip, ip_time, 
      area, uri, response_time
      )
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{ipTime,jdbcType=TIMESTAMP}, 
      #{area,jdbcType=VARCHAR}, #{uri,jdbcType=VARCHAR}, #{responseTime,jdbcType=BIGINT}
      )
    </insert>
    <insert id="insertSelective" parameterType="com.myblog.model.IpLog">
        insert into ip_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="ipTime != null">
                ip_time,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="uri != null">
                uri,
            </if>
            <if test="responseTime != null">
                response_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="ipTime != null">
                #{ipTime,jdbcType=TIMESTAMP},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                #{uri,jdbcType=VARCHAR},
            </if>
            <if test="responseTime != null">
                #{responseTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.myblog.model.IpLog">
        update ip_log
        <set>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="ipTime != null">
                ip_time = #{ipTime,jdbcType=TIMESTAMP},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                uri = #{uri,jdbcType=VARCHAR},
            </if>
            <if test="responseTime != null">
                response_time = #{responseTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myblog.model.IpLog">
    update ip_log
    set ip = #{ip,jdbcType=VARCHAR},
      ip_time = #{ipTime,jdbcType=TIMESTAMP},
      area = #{area,jdbcType=VARCHAR},
      uri = #{uri,jdbcType=VARCHAR},
      response_time = #{responseTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>